/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GCPUserAccessBindingObservation struct {

	// Required. Access level that a user must have to be granted access. Only one access level is supported, not multiple. This repeated field must have exactly one element. Example: "accessPolicies/9522/accessLevels/device_trusted"
	AccessLevels []*string `json:"accessLevels,omitempty" tf:"access_levels,omitempty"`

	// Required. Immutable. Google Group id whose members are subject to this binding's restrictions. See "id" in the G Suite Directory API's Groups resource. If a group's email address/alias is changed, this resource will continue to point at the changed group. This field does not accept group email addresses or aliases. Example: "01d520gv4vjcrht"
	GroupKey *string `json:"groupKey,omitempty" tf:"group_key,omitempty"`

	// an identifier for the resource with format {{name}}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Immutable. Assigned by the server during creation. The last segment has an arbitrary length and has only URI unreserved characters (as defined by RFC 3986 Section 2.3). Should not be specified by the client during creation. Example: "organizations/256/gcpUserAccessBindings/b3-BhcX_Ud5N"
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Required. ID of the parent organization.
	OrganizationID *string `json:"organizationId,omitempty" tf:"organization_id,omitempty"`
}

type GCPUserAccessBindingParameters struct {

	// Required. Access level that a user must have to be granted access. Only one access level is supported, not multiple. This repeated field must have exactly one element. Example: "accessPolicies/9522/accessLevels/device_trusted"
	// +kubebuilder:validation:Optional
	AccessLevels []*string `json:"accessLevels,omitempty" tf:"access_levels,omitempty"`

	// Required. Immutable. Google Group id whose members are subject to this binding's restrictions. See "id" in the G Suite Directory API's Groups resource. If a group's email address/alias is changed, this resource will continue to point at the changed group. This field does not accept group email addresses or aliases. Example: "01d520gv4vjcrht"
	// +kubebuilder:validation:Optional
	GroupKey *string `json:"groupKey,omitempty" tf:"group_key,omitempty"`

	// Required. ID of the parent organization.
	// +kubebuilder:validation:Optional
	OrganizationID *string `json:"organizationId,omitempty" tf:"organization_id,omitempty"`
}

// GCPUserAccessBindingSpec defines the desired state of GCPUserAccessBinding
type GCPUserAccessBindingSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GCPUserAccessBindingParameters `json:"forProvider"`
}

// GCPUserAccessBindingStatus defines the observed state of GCPUserAccessBinding.
type GCPUserAccessBindingStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GCPUserAccessBindingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// GCPUserAccessBinding is the Schema for the GCPUserAccessBindings API. Restricts access to Cloud Console and Google Cloud APIs for a set of users using Context-Aware Access.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
type GCPUserAccessBinding struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.accessLevels)",message="accessLevels is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.groupKey)",message="groupKey is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.organizationId)",message="organizationId is a required parameter"
	Spec   GCPUserAccessBindingSpec   `json:"spec"`
	Status GCPUserAccessBindingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GCPUserAccessBindingList contains a list of GCPUserAccessBindings
type GCPUserAccessBindingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GCPUserAccessBinding `json:"items"`
}

// Repository type metadata.
var (
	GCPUserAccessBinding_Kind             = "GCPUserAccessBinding"
	GCPUserAccessBinding_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GCPUserAccessBinding_Kind}.String()
	GCPUserAccessBinding_KindAPIVersion   = GCPUserAccessBinding_Kind + "." + CRDGroupVersion.String()
	GCPUserAccessBinding_GroupVersionKind = CRDGroupVersion.WithKind(GCPUserAccessBinding_Kind)
)

func init() {
	SchemeBuilder.Register(&GCPUserAccessBinding{}, &GCPUserAccessBindingList{})
}
